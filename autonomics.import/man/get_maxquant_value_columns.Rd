% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/load_maxquant.R
\name{get_maxquant_value_columns}
\alias{get_maxquant_value_columns}
\title{Extract value columns}
\usage{
get_maxquant_value_columns(DT, value_type)
}
\arguments{
\item{DT}{maxquant data.table}

\item{value_type}{any value in autonomics.import::MAXQUANT_VALUE_TYPES}
}
\value{
value type (infer_maxquant_value_type), value column names (extract_value_colnames),
        sample names (update_value_colnames)
}
\description{
Extract value columns
}
\examples{
require(magrittr)

# normalized.ratios
#------------------
if (require(billing.differentiation.data)){
   file <- system.file('extdata/maxquant/proteinGroups.txt',
                      package = 'billing.differentiation.data')
   value_type <- infer_maxquant_value_type(file)
   DT <- data.table::fread(file)
   get_maxquant_value_columns(DT, value_type)
}

if (require(alnoubi.2017)){
   file <- system.file('extdata/proteinGroups.txt',
                      package = 'alnoubi.2017')
   value_type <- infer_maxquant_value_type(file)
   DT <- data.table::fread(file)
   get_maxquant_value_columns(DT, value_type)
}

# reporter.intensities
#---------------------
if (require(billing.vesicles)){
   file <- system.file('extdata/proteinGroups.txt',
                        package = 'billing.vesicles')
   value_type <- infer_maxquant_value_type(file)
   DT <- data.table::fread(file)
   get_maxquant_value_columns(DT, value_type)
}

# lfq intensities
#----------------
if (require(graumann.lfq)){
   file <- system.file('extdata/proteinGroups.txt',
                        package = 'graumann.lfq')
   value_type <- infer_maxquant_value_type(file)
   DT <- data.table::fread(file)
   get_maxquant_value_columns(DT, value_type)
}

# raw intensities
#----------------
if (require(alnoubi.2017)){
   file <- system.file('extdata/proteinGroups.txt',
                        package = 'alnoubi.2017')
   value_type <- infer_maxquant_value_type(file)
   DT <- data.table::fread(file)
   get_maxquant_value_columns(DT, value_type)
}
}
