% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/preprocess_eset2.R
\name{preprocess_eset}
\alias{preprocess_eset}
\title{Preprocess}
\usage{
preprocess_eset(object, normalize_on_svar = character(0),
  invert_subgroups = NULL, channel_frac = "/", subgroup_frac = "_",
  mode_center = FALSE, displayed_features = NULL,
  feature_center = displayed_features, normalize_within_samples = FALSE,
  normalize_between_subgroup_samples = FALSE,
  normalize_between_all_samples = FALSE,
  filter_features_nonzero_for_two_samples_in_some_subgroup = FALSE,
  plot = TRUE, retain_plot_objects = FALSE,
  color_var = autonomics.plot::default_color_var(object),
  shape_var = autonomics.plot::default_shape_var(object),
  txt_var = autonomics.plot::default_txt_var(object), result_dir = NULL)
}
\arguments{
\item{object}{eset}

\item{normalize_on_svar}{svar on which to normalize (should have numeric values)}

\item{invert_subgroups}{vector with subgroups that require inversion (relevant for ratio esets)}

\item{channel_frac}{channel fractionator}

\item{subgroup_frac}{subgroup fractionator}

\item{mode_center}{whether to mode center each sample distribution (logical)}

\item{displayed_features}{features to be displayed in the sample distributions (vector of numeric indexes or character \code{feature_id}s)}

\item{feature_center}{features to center each sample distribution on (vector of numeric indexes or character \code{feature_id}s); median if \code{length(feature_center) > 1}}

\item{normalize_within_samples}{whether to normalize distribution within each sample (logical)}

\item{normalize_between_subgroup_samples}{whether to normalize distributions between samples of same subgroup (logical)}

\item{normalize_between_all_samples}{whether to normalize distributions of all samples (logical)}

\item{filter_features_nonzero_for_two_samples_in_some_subgroup}{logical}

\item{plot}{whether to plot original and normalized sample distributions (logical)}

\item{retain_plot_objects}{whether to return plot objects (grobs) in a \code{tmpplot} slot of the output object}

\item{color_var}{svar mapped to color}

\item{shape_var}{svar mapped to shape}

\item{txt_var}{svar mapped to txt}

\item{result_dir}{directory to which sample distributions (both before and after normalization) are printed}
}
\value{
eset with updated exprs
}
\description{
Preprocess
}
\examples{
library(magrittr)
result_dir <- tempdir() \%T>\% message()
if (require(autonomics.data)){
   object <- autonomics.data::billing2016
   object \%>\% autonomics::preprocess_eset(
                   normalize_between_subgroup_samples = TRUE, result_dir = result_dir)
   object \%>\% autonomics::preprocess_eset(
                   invert_subgroups                   = c('BM_E', 'BM_EM', 'EM_E'),
                   mode_center                        = TRUE,
                   normalize_within_samples           = TRUE,
                   normalize_between_subgroup_samples = TRUE,
                   normalize_between_all_samples      = TRUE,
                   result_dir               = result_dir)
   # Retain plotted object
   tmp_object <- object \%>\% autonomics::preprocess_eset(
                   normalize_between_subgroup_samples = TRUE, result_dir = result_dir,
                   retain_plot_objects = TRUE)
   grid::grid.draw(autonomics.import::tmpplot(tmp_object)[[1]])
   grid::grid.draw(autonomics.import::tmpplot(tmp_object)[[2]])
}
if (require(billing.differentiation.data)){
   object <- billing.differentiation.data::protein.ratios
   object \%>\% preprocess_eset(normalize_within_samples = TRUE, result_dir = result_dir)
   object \%>\% preprocess_eset(
                   mode_center                        = TRUE,
                   normalize_within_samples           = TRUE,
                   normalize_between_subgroup_samples = TRUE,
                   normalize_between_all_samples      = TRUE,
                   result_dir                         = result_dir)
}
if (require(atkin.2014)){
   object <- atkin.2014::soma
   object \%>\% preprocess_eset(normalize_within_samples           = TRUE, result_dir = result_dir)
   object \%>\% preprocess_eset(normalize_between_subgroup_samples = TRUE, result_dir = result_dir)
   object \%>\% preprocess_eset(normalize_between_all_samples      = TRUE, result_dir = result_dir)
}
if (require(halama.2016)){
   object <- halama.2016::cell.metabolites
   object \%>\% preprocess_eset(normalize_on_svar = 'ProteinContent')
}
if (require(alnoubi.2017)){
   object <- alnoubi.2017::proteins.replicates
   object \%>\% preprocess_eset(displayed_features = 'PG1396', feature_center = 'PG1396')
}
}
