% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/core_ggplot_from_data.R
\name{core_ggplot_from_data}
\alias{core_ggplot_from_data}
\title{Centralized convenience function to shape data and provide a core ggplot2 object to build on}
\usage{
core_ggplot_from_data(object, ..., listed_objects = list(),
  MARGIN = c("samples", "features"), x = NULL, alpha_var = NULL,
  color_var = autonomics.plot::default_color_var(object), fill_var = NULL,
  group_var = NULL, linetype_var = NULL, shape_var = NULL,
  size_var = NULL, stroke_var = NULL, weigth_var = NULL,
  facet1_var = NULL, facet2_var = NULL, marked_ids = NULL,
  horizontal = FALSE, scales = ifelse(horizontal, "free_x", "free_y"),
  facet_grid_labeller = "label_parsed", xlab = "", ylab = "",
  title = "")
}
\arguments{
\item{object}{eSet, EList or SummarizedExperiment}

\item{...}{additonal eSets, ELists, SummarizedExperiments or matrices}

\item{listed_objects}{additonal eSets, ELists, SummarizedExperiments or matrices (when wrapped in a \code{\link{list}})}

\item{MARGIN}{Whether the reference axis is \code{samples} (default) or \code{features}}

\item{x}{variable (samples or features depending on \code{MARGIN}) mapped to x (\code{horizontal == FALSE}) or y axis (\code{horizontal == TRUE})}

\item{alpha_var}{variable (samples or features depending on \code{MARGIN}) mapped to alpha aesthetic}

\item{color_var}{variable (samples or features depending on \code{MARGIN}) mapped to color aesthetic}

\item{fill_var}{variable (samples or features depending on \code{MARGIN}) mapped to fill aesthetic}

\item{group_var}{variable (samples or features depending on \code{MARGIN}) mapped to group aesthetic}

\item{linetype_var}{variable (samples or features depending on \code{MARGIN}) mapped to linetype aesthetic}

\item{shape_var}{variable (samples or features depending on \code{MARGIN}) mapped to shape aesthetic}

\item{size_var}{variable (samples or features depending on \code{MARGIN}) mapped to size aesthetic}

\item{stroke_var}{variable (samples or features depending on \code{MARGIN}) mapped to stroke aesthetic}

\item{weigth_var}{variable (samples or features depending on \code{MARGIN}) mapped to weight aesthetic}

\item{facet1_var}{variable (samples or features depending on \code{MARGIN}) for faceting (\code{ggplot2::facet_grid(facet1_var ~ .)})}

\item{facet2_var}{variable (samples or features depending on \code{MARGIN}) for faceting (\code{ggplot2::facet_grid(. ~ facet2_var)})}

\item{marked_ids}{vector of explicitly marked indexes in the non-\code{MARGIN} dimension (in \code{features} if \code{MARGIN == 'samples'} and vice versa)}

\item{horizontal}{whether to lay the plot out horizontally (measurements on the x, sample names on the y axis)}

\item{scales}{should Scales be fixed ("fixed", the default), free ("free"), or free in one dimension ("free_x", "free_y").}

\item{facet_grid_labeller}{labeller (see \code{\link[ggplot2]{labellers}}) for facetting labels}

\item{xlab}{label of y axis (character)}

\item{ylab}{label of y axis (character)}

\item{title}{title (character)}
}
\value{
ggplot2 object
}
\description{
Centralized convenience function to shape data and provide a core ggplot2 object to build on
}
\details{
A variable (\code{color_var} etc.) may come in two forms:
1) as a string and subset of column names in the annotation of the reference \code{object},
resulting in the use of the corresponding data or
2) as a character object of \code{length(c(object, ...))}, resulting in the augmentation of the
data to be plotted by the variable (variable 1 associated with \code{c(object, ...)[[1]]}, etc.).
See the example section.

If \code{MARGIN == 'samples'}, Objects in \code{c(object, ...)} must have identical number of
samples (columns). In the case of \code{MARGIN == 'features'}, an identical number of features
(rows) must be present).

Annotation is fetched from the (master)\code{object} and used on all.
}
\examples{
require(magrittr)
requireNamespace('ggplot2')
requireNamespace('ggstance')
if (require(autonomics.data)){
   # Just the basics ...
   autonomics.plot::core_ggplot_from_data(autonomics.data::ALL[, 1:30])
   # Add a 'geom' layer
   autonomics.plot::core_ggplot_from_data(autonomics.data::ALL[, 1:30]) +
     ggplot2::geom_violin()
   # (Nearly) same thing, but horizontal and filled ...
   autonomics.plot::core_ggplot_from_data(autonomics.data::ALL[, 1:15], fill_var = 'sex', horizontal = TRUE) +
     ggstance::geom_violinh()
   # Combine 2 'data sets', separating them by fill (augmenting the data on-the-fly)
   autonomics.plot::core_ggplot_from_data(
     autonomics.data::ALL[, 1:15], autonomics.data::ALL[, 16:30],
     color_var = NULL,
     fill_var = c('A', 'B')) +
     ggplot2::geom_boxplot()
   # Combine 2 'data sets', separating them by facetting
   autonomics.plot::core_ggplot_from_data(
     autonomics.data::ALL[, 1:30], autonomics.data::ALL[, 31:60],
     facet2_var = c('A', 'B'), horizontal = TRUE) +
     ggstance::geom_boxploth()
   # Combine with further facetting ... using sdata ...
   autonomics.data::core_ggplot_from_data(
     autonomics.data::ALL[, 1:15], autonomics.data::ALL[, 16:30],
     facet1_var = 'sex', facet2_var = c('A', 'B'), horizontal = TRUE) +
     ggstance::geom_boxploth()
   # Combine with further facetting ... using on-the-fly augmentation (only) ...
   autonomics.plot::core_ggplot_from_data(
     autonomics.data::ALL[, 1:15], autonomics.data::ALL[, 16:30],
     facet1_var = c('C', 'D'), facet2_var = c('A', 'B'), horizontal = TRUE) +
     ggstance::geom_boxploth()
}
}
\author{
Johannes Graumann
}
